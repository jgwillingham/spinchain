#include <iostream>
#include <assert.h>
#include <eigen3/Eigen/Dense>
#include <SpinHalfChain.hpp>

using namespace Eigen;
using namespace SpinChain;


int test_sx_4mer_hamiltonian()
{
        std::vector<double> couplings = {1.0, 0.0, 0.0};
        SpinHalfChain shc = SpinHalfChain(4, couplings);
        shc.buildHamiltonian();

        MatrixXcd xHamiltonian;
        xHamiltonian.resize(16, 16);
        xHamiltonian << 0.0, 0.0, 0.0, 0.25,   0.0, 0.0, 0.25, 0.0,   0.0, 0.0, 0.0, 0.0,   0.25, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.25, 0.0,   0.0, 0.0, 0.0, 0.25,   0.0, 0.0, 0.0, 0.0,   0.0, 0.25, 0.0, 0.0,
                        0.0, 0.25, 0.0, 0.0,   0.25, 0.0, 0.0, 0.0,   0.0, 0.0, 0.0, 0.0,   0.0, 0.0, 0.25, 0.0, 
                        0.25, 0.0, 0.0, 0.0,   0.0, 0.25, 0.0, 0.0,   0.0, 0.0, 0.0, 0.0,   0.0, 0.0, 0.0, 0.25,

                        0.0, 0.0, 0.25, 0.0,   0.0, 0.0, 0.0, 0.25,   0.25, 0.0, 0.0, 0.0,   0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.25,   0.0, 0.0, 0.25, 0.0,   0.0, 0.25, 0.0, 0.0,   0.0, 0.0, 0.0, 0.0,
                        0.25, 0.0, 0.0, 0.0,   0.0, 0.25, 0.0, 0.0,   0.0, 0.0, 0.25, 0.0,   0.0, 0.0, 0.0, 0.0,
                        0.0, 0.25, 0.0, 0.0,   0.25, 0.0, 0.0, 0.0,   0.0, 0.0, 0.0, 0.25,   0.0, 0.0, 0.0, 0.0,
        
                        0.0, 0.0, 0.0, 0.0,   0.25, 0.0, 0.0, 0.0,   0.0, 0.0, 0.0, 0.25,   0.0, 0.0, 0.25, 0.0,
                        0.0, 0.0, 0.0, 0.0,   0.0, 0.25, 0.0, 0.0,   0.0, 0.0, 0.25, 0.0,   0.0, 0.0, 0.0, 0.25,
                        0.0, 0.0, 0.0, 0.0,   0.0, 0.0, 0.25, 0.0,   0.0, 0.25, 0.0, 0.0,   0.25, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0,   0.0, 0.0, 0.0, 0.25,   0.25, 0.0, 0.0, 0.0,   0.0, 0.25, 0.0, 0.0,

                        0.25, 0.0, 0.0, 0.0,   0.0, 0.0, 0.0, 0.0,   0.0, 0.0, 0.25, 0.0,   0.0, 0.0, 0.0, 0.25,
                        0.0, 0.25, 0.0, 0.0,   0.0, 0.0, 0.0, 0.0,   0.0, 0.0, 0.0, 0.25,   0.0, 0.0, 0.25, 0.0,
                        0.0, 0.0, 0.25, 0.0,   0.0, 0.0, 0.0, 0.0,   0.25, 0.0, 0.0, 0.0,   0.0, 0.25, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.25,   0.0, 0.0, 0.0, 0.0,   0.0, 0.25, 0.0, 0.0,   0.25, 0.0, 0.0, 0.0;
	assert( shc.hamiltonian.isApprox( xHamiltonian, 1e-15) );
        return 0;
}


int main(){
	test_sx_4mer_hamiltonian();
}
